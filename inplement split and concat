def split(self, tensor):
        # 传入的tensor是没有拆分的Q K V矩阵的，我们获取他的各个维度
        batch_size, length, d_model = tensor.size()
        # d_tensor是每个头关注的维度大小，使用 // 整数除法，确保d_tensor为int型
        d_tensor = d_model // self.n_head
        # view函数将原本的d_model维度拆分为 头的个数 x 每个头关注的维度大小
        tensor = tensor.view(batch_size, length, self.n_head, d_tensor).transpose(1, 2)
        return tensor

    def concat(self, tensor):
        # 我们还是首先获取输入的各个维度
        batch_size, head, length, d_tensor = tensor.size()
        # 逆向操作，将d_model恢复出来，每个头关注的维度 x 头的个数
        d_model = head * d_tensor
        # 先转置，再将原本被拆分的d_model维度重塑回来
        tensor = tensor.transpose(1, 2).contiguous().view(batch_size, length, d_model)
        return tensor
